{
  "swagger" : "2.0",
  "info" : {
    "version" : "3.1.3",
    "title" : "BMS API"
  },
  "host" : "baseuri.com",
  "basePath" : "",
  "schemes" : [
    "http"
  ],
  "paths" : {
    "/{server_url}/api/token" : {
      "post" : {
        "summary" : "Obtain access token",
        "description" : "Prior to making any API requests, you need to obtain an access token that will be used for all subsequent API requests.",
        "operationId" : "obtain-access-token",
        "consumes" : [
          "application/xml"
        ],
        "parameters" : [
          {
            "name" : "server_url",
            "in" : "path",
            "description" : "URL of the Modelpedia server. (e.g. http://modelpedia.com.au)",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "grant_type",
            "in" : "query",
            "description" : "Use the value 'password' since you will be obtaining an access token using the your password credentials.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "username",
            "in" : "query",
            "description" : "The account username for which you want to obtain an access token.",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "password",
            "in" : "query",
            "description" : "The account password for which you want to obtain an access token.",
            "required" : true,
            "type" : "string"
          },
          {
            "in" : "formData",
            "required" : false,
            "type" : "file"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Upon successful submission of the API request, an XML response will be returned with the access token, token type issued and expiry time in milliseconds.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "access_token" : {
                  "type" : "string",
                  "example" : "mUZrfE9MJySA1YTyGl9HsMjIypWNtl9jqjpfqxMKakdV00Fkh6C38gZkztrtCzWS"
                },
                "token_type" : {
                  "type" : "string",
                  "example" : "Bearer"
                }
              },
              "required" : [
                "access_token",
                "token_type"
              ]
            }
          }
        }
      }
    },
    "/{server_url}/api/{model_choice}/{model_guid}/items/schema" : {
      "get" : {
        "summary" : "Get item schema using library model uuid",
        "description" : "This is to query the schema of a library using the model_guid. When using the library UUID, you are required to provide the model choice. (i.e. LatestDraft, LatestProposed otr LatestFinal)",
        "operationId" : "get-item-details",
        "parameters" : [
          {
            "name" : "server_url",
            "in" : "path",
            "description" : "Modelpedia server URL. e.g. http://www.modelpedia.com.au",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "model_choice",
            "in" : "path",
            "description" : "Specifies if you want to retreive the draft, proposed or final version of the library. (e.g., LatestDraft, LatestProposed or LatestFinal)",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "model_guid",
            "in" : "path",
            "description" : "The published model uuid. (i.e. the uuid of the specific library version.)",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/{server_url}/api/{model_guid}/items/schema" : {
      "get" : {
        "summary" : "Get item schema using specific model version",
        "description" : "This is used to query the items schema when you provide the UUID of the specific published model library.",
        "operationId" : "get-item-schema",
        "parameters" : [
          {
            "name" : "server_url",
            "in" : "path",
            "description" : "Modelpedia server URL. (e.g., http://www.modelpedia.com.au)",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "model_guid",
            "in" : "path",
            "description" : "The UUID of the published model library.",
            "required" : true,
            "type" : "string"
          }
        ],
        "responses" : {
          "default" : {
            "description" : "default response"
          }
        }
      }
    },
    "/{server_url}/api/{model_guid}/items?$filter=isof('{item_type}')" : {
      "get" : {
        "summary" : "List items of a specified type",
        "description" : "This API request will retreive all items relating to the specified item type. The item type can be filtered out using the $filter paramater and the 'isOf' option. \ne.g., filter=isof('Business Rule') will list out all items that are listed under item type 'Business Rule'.",
        "operationId" : "list-items-of-a-specified-type",
        "parameters" : [
          {
            "name" : "server_url",
            "in" : "path",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "model_guid",
            "in" : "path",
            "required" : true,
            "type" : "string"
          },
          {
            "name" : "top",
            "in" : "query",
            "required" : false,
            "type" : "integer"
          },
          {
            "name" : "skip",
            "in" : "query",
            "required" : false,
            "type" : "integer"
          },
          {
            "name" : "count",
            "in" : "query",
            "required" : false,
            "type" : "boolean"
          }
        ],
        "responses" : {
          "default" : {
            "description" : "default response"
          }
        }
      }
    }
  },
  "definitions" : {
    "Author" : {
      "type" : "object",
      "required" : [
        "author_id",
        "iconsets_count",
        "name",
        "website_url"
      ],
      "properties" : {
        "website_url" : {
          "type" : "string",
          "example" : "http://www.everaldo.com/"
        },
        "name" : {
          "type" : "string",
          "example" : "Everaldo Coelho"
        },
        "author_id" : {
          "type" : "number",
          "format" : "double",
          "example" : 2.0
        },
        "iconsets_count" : {
          "type" : "number",
          "format" : "double",
          "example" : 12.0
        }
      },
      "description" : "See [Format Model](model://Format) **bold**"
    },
    "Category" : {
      "type" : "object",
      "required" : [
        "identifier",
        "name"
      ],
      "properties" : {
        "identifier" : {
          "type" : "string",
          "example" : "halloween"
        },
        "name" : {
          "type" : "string",
          "example" : "Halloween"
        }
      }
    },
    "Format" : {
      "type" : "object",
      "required" : [
        "download_url",
        "format",
        "preview_url"
      ],
      "properties" : {
        "preview_url" : {
          "type" : "string",
          "example" : "https://cdn1.iconfinder.com/data/icons/streamline-business-finance/60/cell-0-12-30.png"
        },
        "download_url" : {
          "type" : "string",
          "example" : "/icons/233366/formats/png/30/download"
        },
        "format" : {
          "type" : "string",
          "example" : "png"
        }
      }
    },
    "IdAndName" : {
      "type" : "object",
      "required" : [
        "identifier",
        "name"
      ],
      "properties" : {
        "identifier" : {
          "type" : "string",
          "example" : "outline"
        },
        "name" : {
          "type" : "string",
          "example" : "Outline"
        }
      },
      "description" : "Name - Description pair"
    },
    "License" : {
      "type" : "object",
      "required" : [
        "license_id",
        "name",
        "scope",
        "url"
      ],
      "properties" : {
        "license_id" : {
          "type" : "number",
          "format" : "double",
          "example" : 71.0
        },
        "scope" : {
          "type" : "string",
          "example" : "free"
        },
        "name" : {
          "type" : "string",
          "example" : "Basic license"
        },
        "url" : {
          "type" : "string",
          "example" : "https://www.iconfinder.com/licenses/basic"
        }
      }
    },
    "Price" : {
      "type" : "object",
      "required" : [
        "currency",
        "license",
        "price"
      ],
      "properties" : {
        "license" : {
          "$ref" : "#/definitions/License"
        },
        "price" : {
          "type" : "number",
          "format" : "double",
          "example" : 1.0
        },
        "currency" : {
          "type" : "string",
          "example" : "USD"
        }
      }
    },
    "Icon" : {
      "type" : "object",
      "required" : [
        "categories",
        "containers",
        "icon_id",
        "is_premium",
        "prices",
        "primiti",
        "published_at",
        "raster_sizes",
        "styles",
        "tags",
        "temp",
        "type",
        "vector_sizes"
      ],
      "properties" : {
        "temp" : {
          "description" : "test enums",
          "$ref" : "#/definitions/Test enum"
        },
        "primiti" : {
          "type" : "object"
        },
        "vector_sizes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "formats" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/IdAndName"
                }
              },
              "size" : {
                "type" : "number",
                "format" : "double",
                "example" : 60.0
              },
              "size_height" : {
                "type" : "number",
                "format" : "double",
                "example" : 60.0
              },
              "size_width" : {
                "type" : "number",
                "format" : "double",
                "example" : 60.0
              },
              "target_sizes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "0" : {
                      "type" : "number",
                      "format" : "double",
                      "example" : 30.0
                    },
                    "1" : {
                      "type" : "number",
                      "format" : "double",
                      "example" : 60.0
                    },
                    "2" : {
                      "type" : "number",
                      "format" : "double",
                      "example" : 120.0
                    },
                    "3" : {
                      "type" : "number",
                      "format" : "double",
                      "example" : 180.0
                    },
                    "4" : {
                      "type" : "number",
                      "format" : "double",
                      "example" : 240.0
                    },
                    "5" : {
                      "type" : "number",
                      "format" : "double",
                      "example" : 480.0
                    }
                  },
                  "required" : [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ]
                }
              }
            },
            "required" : [
              "formats",
              "size",
              "size_height",
              "size_width",
              "target_sizes"
            ]
          }
        },
        "icon_id" : {
          "type" : "number",
          "format" : "double",
          "example" : 233366.0
        },
        "type" : {
          "type" : "string",
          "example" : "vector"
        },
        "tags" : {
          "type" : "array",
          "example" : "interest",
          "items" : {
            "type" : "string"
          }
        },
        "raster_sizes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "formats" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/Format"
                }
              },
              "size" : {
                "type" : "number",
                "format" : "double",
                "example" : 30.0
              },
              "size_height" : {
                "type" : "number",
                "format" : "double",
                "example" : 30.0
              },
              "size_width" : {
                "type" : "number",
                "format" : "double",
                "example" : 30.0
              }
            },
            "required" : [
              "formats",
              "size",
              "size_height",
              "size_width"
            ]
          }
        },
        "is_premium" : {
          "type" : "boolean",
          "example" : true
        },
        "styles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdAndName"
          }
        },
        "containers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Format"
          }
        },
        "categories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdAndName"
          }
        },
        "published_at" : {
          "type" : "string",
          "example" : "2014-01-24T12:00:14.811Z"
        },
        "prices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Price"
          }
        }
      }
    },
    "Iconset" : {
      "type" : "object",
      "required" : [
        "author",
        "categories",
        "icons_count",
        "iconset_id",
        "identifier",
        "is_premium",
        "name",
        "prices",
        "published_at",
        "styles",
        "type"
      ],
      "properties" : {
        "identifier" : {
          "type" : "string",
          "example" : "coloricons-5"
        },
        "is_premium" : {
          "type" : "boolean",
          "example" : true
        },
        "author" : {
          "$ref" : "#/definitions/User"
        },
        "name" : {
          "type" : "string",
          "example" : "Coloricons 5"
        },
        "iconset_id" : {
          "type" : "number",
          "format" : "double",
          "example" : 5411.0
        },
        "styles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdAndName"
          }
        },
        "icons_count" : {
          "type" : "number",
          "format" : "double",
          "example" : 50.0
        },
        "categories" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdAndName"
          }
        },
        "published_at" : {
          "type" : "string",
          "example" : "2014-05-29T11:38:43.852Z"
        },
        "prices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Price"
          }
        },
        "type" : {
          "type" : "string",
          "example" : "vector"
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [
        "company",
        "iconsets_count",
        "is_designer",
        "location",
        "name",
        "social_dribbble",
        "social_twitter",
        "user_id",
        "username",
        "website_url"
      ],
      "properties" : {
        "is_designer" : {
          "type" : "boolean",
          "example" : true
        },
        "social_twitter" : {
          "type" : "string",
          "example" : "webalys"
        },
        "website_url" : {
          "type" : "string",
          "example" : "http://www.webalys.com/"
        },
        "user_id" : {
          "type" : "number",
          "format" : "double",
          "example" : 40097.0
        },
        "social_dribbble" : {
          "type" : "string",
          "example" : "webalys"
        },
        "name" : {
          "type" : "string",
          "example" : "Vincent Le Moign"
        },
        "company" : {
          "type" : "string",
          "example" : "Webalys"
        },
        "location" : {
          "type" : "string",
          "example" : "Hong Kong"
        },
        "iconsets_count" : {
          "type" : "number",
          "format" : "double",
          "example" : 74.0
        },
        "username" : {
          "type" : "string",
          "example" : "webalys"
        }
      },
      "description" : "[See docs](doc://Data transmission sdfwef)"
    },
    "SearchforiconsRequest" : {
      "type" : "object",
      "required" : [
        "contributors",
        "coordinates",
        "created_at",
        "entities",
        "favorited",
        "geo",
        "id",
        "id_str",
        "in_reply_to_screen_name",
        "in_reply_to_status_id",
        "in_reply_to_status_id_str",
        "in_reply_to_user_id",
        "in_reply_to_user_id_str",
        "place",
        "possibly_sensitive",
        "retweet_count",
        "retweeted",
        "source",
        "text",
        "truncated",
        "user"
      ],
      "properties" : {
        "in_reply_to_status_id_str" : {
          "type" : "object"
        },
        "in_reply_to_status_id" : {
          "type" : "object"
        },
        "possibly_sensitive" : {
          "type" : "boolean",
          "example" : false
        },
        "coordinates" : {
          "type" : "object"
        },
        "truncated" : {
          "type" : "boolean",
          "example" : false
        },
        "created_at" : {
          "type" : "string",
          "example" : "Wed Aug 29 17:12:58 +0000 2012"
        },
        "in_reply_to_user_id_str" : {
          "type" : "object"
        },
        "source" : {
          "type" : "string",
          "example" : "<a href=\"http://sites.google.com/site/yorufukurou/\" rel=\"nofollow\">YoruFukurou</a>"
        },
        "retweet_count" : {
          "type" : "number",
          "format" : "double",
          "example" : 121.0
        },
        "retweeted" : {
          "type" : "boolean",
          "example" : false
        },
        "geo" : {
          "type" : "object"
        },
        "in_reply_to_screen_name" : {
          "type" : "object"
        },
        "entities" : {
          "type" : "object"
        },
        "id_str" : {
          "type" : "string",
          "example" : "240859602684612608"
        },
        "in_reply_to_user_id" : {
          "type" : "object"
        },
        "contributors" : {
          "type" : "object"
        },
        "text" : {
          "type" : "string",
          "example" : "Introducing the Twitter Certified Products Program: https://t.co/MjJ8xAnT"
        },
        "id" : {
          "type" : "number",
          "format" : "double",
          "example" : 2.40859602684612608E17
        },
        "place" : {
          "type" : "object"
        },
        "user" : {
          "type" : "object"
        },
        "favorited" : {
          "type" : "boolean",
          "example" : false
        }
      },
      "description" : "ewf"
    },
    "Error model" : {
      "type" : "object",
      "required" : [
        "code",
        "message"
      ],
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "not_found"
        },
        "message" : {
          "type" : "string",
          "example" : "Not found"
        }
      }
    },
    "Test enum" : {
      "type" : "string",
      "description" : "ewfwef",
      "enum" : [
        "wefwef"
      ]
    }
  },
  "parameters" : {
    "$filter" : {
      "name" : "$filter",
      "in" : "query",
      "description" : "Filter out the item type using the 'isOf' option. Only the 'isOf' option is supported for item type checking.",
      "required" : false,
      "type" : "string"
    },
    "$top" : {
      "name" : "$top",
      "in" : "query",
      "description" : "This is a paging option to return the specified number of items from the top of the list. \ne.g. $top=50 will return the first 50 items in the list.",
      "required" : false,
      "type" : "integer"
    },
    "$skip" : {
      "name" : "$skip",
      "in" : "query",
      "description" : "This is a paging option to skip the specified number of items in the list. e.g. $skip=50 will skip the first 50 items in the list and return results from the 51st item onwards.",
      "required" : false,
      "type" : "integer"
    },
    "$count" : {
      "name" : "$count",
      "in" : "query",
      "description" : "This is a paging option, to limit the amount of the data returned.",
      "required" : false,
      "type" : "boolean",
      "default" : true
    }
  },
  "responses" : {
    "bad_request" : {
      "description" : "The request was malformed.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      },
      "examples" : {
        "Example 1" : "{\n    \"code\": \"bad_request\",\n    \"message\": \"The request was malformed.\"\n}"
      }
    },
    "invalid_<parameter>" : {
      "description" : "The request was malformed. The query parameter \n`parameter` contains an invalid value.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    },
    "bad_credentials" : {
      "description" : "Invalid credentials were used to authenticate the request.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    },
    "permission_denied" : {
      "description" : "Permission to the requested resource was denied. This often means that a request should have been authenticated but wasn't. dispatched to clean up the mess immediately!",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    },
    "insufficient_permissions" : {
      "description" : "The authentication used does not have the required permissions to access the requested resource. Make sure the authentication was performed with the necessary scope.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    },
    "not_purchased" : {
      "description" : "The premium resource you're trying to access has not been purchased by the authenticated user.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    },
    "not_found" : {
      "description" : "The requested resource does not exist or is not publicly available.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    },
    "rate_limit_exceeded" : {
      "description" : "API request rate limit exceeded. See `rate limiting`.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    },
    "server_error" : {
      "description" : "An internal server error occured. This shouldn't happen, and robots will be dispatched to deal with it immediately.",
      "schema" : {
        "$ref" : "#/definitions/Error model"
      }
    }
  }
}
